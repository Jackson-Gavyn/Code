import turtle
import os
import math
import random

#setup screen
wn = turtle.Screen()
wn.bgcolor("black")
wn.title("Space Invaders")
wn.bgpic("space_invaders_background.gif")

#Reg Shape
turtle.register_shape("invader.gif")
turtle.register_shape("player.gif")

#loop var
loop = True
#Score
score = 0

#Draw Score
score_pen = turtle.Turtle()
score_pen.speed(0)
score_pen.color("white")
score_pen.penup()
score_pen.setposition(-290, 280)
scorestring = "Score: %s" %score
score_pen.write(scorestring, False, align="left", font=("Arial", 14, "normal"))
score_pen.hideturtle()

#Draw Title
name_pen = turtle.Turtle()
name_pen.speed(0)
name_pen.color("white")
name_pen.penup()
name_pen.setposition(0, 280)
scorestring = "What A Wonderful Nightmare"
name_pen.write(scorestring, False, align="center", font=("Arial", 14, "italic"))
name_pen.hideturtle()

#draw border
border_pen = turtle.Turtle()
border_pen.speed(0)
border_pen.color("white")
border_pen.penup()
border_pen.setposition(-300,-300)
border_pen.pendown()
border_pen.pensize(3)
for side in range(4):
    border_pen.fd(600)
    border_pen.lt(90)
border_pen.hideturtle()

#Create the player Turtle
player = turtle.Turtle()
player.color("blue")
player.shape("player.gif")
player.penup()
player.speed(0)
player.setposition(0, -250)
player.setheading(90)

playerspeed = 15



#num of enemies
number_of_enemies = 5
#empty list of enemies
enemies = []

#add enemies to list
for i in range(number_of_enemies):
    #Create the enemy
    enemies.append(turtle.Turtle())
for enemy in enemies:

    enemy.color("Red")
    enemy.shape("invader.gif")
    enemy.penup()
    enemy.speed(0)
    x = random.randint(-200,200)
    y = random.randint(100,250)
    enemy.setposition(x, y)
    enemyspeed = 4


#Create Bullet
bullet = turtle.Turtle()
bullet.color("yellow")
bullet.shape("triangle")
bullet.penup()
bullet.speed(0)
bullet.setheading(90)
bullet.shapesize(.25, .25)
bullet.hideturtle()
bullet.setposition(0, 400)
bulletspeed = 30
powerAmmo = 0
#Define bullet state
#ready - ready to fire
#fire bullet firing

bulletstate = "ready"

#Defining Hit Range
hitRange = 20

#creating power up object
powerup = turtle.Turtle()
powerup.speed(0)
powerup.color("white")
powerup.penup()
powerup.shape("circle")
powerup.shapesize(.5, .5)
powerup.setposition(0, 280)

powerupSpeed = 10
powerInt = 0


#Move the player

def move_left():
    x = player.xcor()
    x -= playerspeed
    if x < -280:
        x = -280
    player.setx(x)

def move_right():
    x = player.xcor()
    x += playerspeed
    if x > 280:
        x = 280
    player.setx(x)

def fire_bullet():
    #declare bulletstate as global if it needs to be changed
    global bulletstate
    global powerAmmo
    powerAmmo -= 1
    if bulletstate == "ready":
        os.system("afplay laser.wav&")
        bulletstate = "fire"
        #move bullet to just above player
        x = player.xcor()
        y = player.ycor() + 10
        bullet.setposition(x, y)
        bullet.showturtle()
def isCollision(t1, t2):
    distance = math.sqrt(math.pow(t1.xcor() - t2.xcor(), 2) + math.pow(t1.ycor() - t2.ycor(), 2))
    global hitRange
    if distance < hitRange:
        return True
    else:
        return False

def enemyCollision(t1, t2):
    distance = math.sqrt(math.pow(t1.xcor() - t2.xcor(), 2) + math.pow(t1.ycor() - t2.ycor(), 2))
    if distance < 30:
        return True
    else:
        return False
#Create keyboard bindings

turtle.listen()
turtle.onkey(move_left, "Left")
turtle.onkey(move_right, "Right")
turtle.onkey(fire_bullet, "space")

#Main Game Loop
while loop == True:
    if(powerInt > 7):
        y = powerup.ycor() - powerupSpeed
        powerup.sety(y)

    if isCollision(powerup, player):
        powerup.hideturtle()
        powerup.setposition(0, 280)
        powerup.showturtle()
        score += 20
        scorestring = "Score: %s" % score
        score_pen.clear()
        score_pen.write(scorestring, False, align="left", font=("Arial", 14, "normal"))
        powerInt = 0
        powerAmmo = 6

    if powerAmmo > 0:
        hitRange = 40
        bullet.shapesize(2, .5)
        bullet.color("blue")
        bulletspeed = 45

    elif powerAmmo < 0:
        powerAmmo = 0
        bullet.shapesize(.25, .25)
        bullet.color("yellow")
        bulletspeed = 30
        hitRange = 20
    elif powerup.ycor() <= player.ycor():
        powerInt = 0
        powerup.hideturtle()
        powerup.setposition(0, 280)
        powerup.showturtle()
        score -= 20
        scorestring = "Score: %s" % score
        score_pen.clear()
        score_pen.write(scorestring, False, align="left", font=("Arial", 14, "normal"))
    for indexMain, enemy in enumerate(enemies):
        #Move Enemy
        x = enemy.xcor()
        x += enemyspeed
        enemy.setx(x)

        if enemy.ycor() <= player.ycor():

            enemy.setposition(player.xcor(), player.ycor())
        #Reverse

        if enemy.xcor() <= -280 or enemy.xcor() >= 280:
            for e in enemies:
               #Move the enemies all down
                y = e.ycor()
                y -= 40
                enemyspeed = -enemyspeed
                e.sety(y)
        if isCollision(bullet, enemy):
            # reset bullet
            bullet.hideturtle()
            bulletstate = "ready"
            bullet.setposition(0, 400)
            os.system("afplay explosion.wav&")
            # reset enemy
            x = random.randint(-200, 200)
            y = random.randint(100, 250)
            enemy.setposition(x, y)
            # Score Update
            score += 10
            scorestring = "Score: %s" %score
            score_pen.clear()
            score_pen.write(scorestring, False, align="left", font=("Arial", 14, "normal"))
            global powerInt
            if powerup.ycor() < 280:
                powerInt = 8
            else:
                powerInt = random.randint(1, 8)

        if isCollision(player, enemy):
            os.system("afplay explosion.wav&")
            player.hideturtle()
            for e in enemies:
                e.hideturtle()
            print("game over")
            loop = False
           
        #move bullet
        for index, e in enumerate (enemies):
            if enemyCollision(e, enemy):
                if (index == indexMain):
                    continue
                else:
                    e.setx(random.randint(-200, 200))

    if bulletstate == "fire":
        y = bullet.ycor()
        y += bulletspeed
        bullet.sety(y)

    if bullet.ycor() > 275:
        bullet.hideturtle()
        bulletstate = "ready"

        #Check for a collision between enemy and bullet

turtle.mainloop()
